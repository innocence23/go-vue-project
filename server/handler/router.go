package handler

import (
	"net/http"
	_ "project/docs"
	"project/global"
	"project/handler/middleware"
	"project/handler/v1/admin"
	"project/handler/v1/autocode"

	"github.com/gin-gonic/gin"
	ginSwagger "github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
)

func InitRouter() *gin.Engine {
	var Router = gin.Default()
	Router.StaticFS(global.GVA_CONFIG.Local.Path, http.Dir(global.GVA_CONFIG.Local.Path)) // 为用户头像和文件提供静态地址
	global.GVA_LOG.Info("use middleware logger")
	// 跨域
	//Router.Use(middleware.Cors()) // 如需跨域可以打开
	global.GVA_LOG.Info("use middleware cors")
	Router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	global.GVA_LOG.Info("register swagger handler")
	// 方便统一添加路由组前缀 多服务器上线使用

	//获取路由组实例
	gRouter := Router.Group("api")
	admin.NewBaseHandler().Router(gRouter) // 登陆及验证码

	gRouter.Use(middleware.JWTAuth()).Use(middleware.CasbinHandler())
	{
		admin.NewBaseHandler().RouterMw(gRouter)           // 用户路由
		admin.NewPermissionHandler().Router(gRouter)       // 注册功能api路由
		admin.NewJwtHandler().Router(gRouter)              // jwt相关路由
		admin.NewRoleHandler().Router(gRouter)             // 注册角色路由
		admin.NewMenuHandler().Router(gRouter)             // 注册menu路由
		admin.NewCasbinHandler().Router(gRouter)           // 权限相关路由
		admin.NewSysHandler().Router(gRouter)              // system相关路由
		admin.NewEmailHandler().Router(gRouter)            // 邮件相关路由
		admin.NewAutoHandler().Router(gRouter)             // 创建自动化代码
		admin.NewDictionaryHandler().Router(gRouter)       // 字典管理
		admin.NewDictionaryDetailHandler().Router(gRouter) // 字典详情管理
		admin.OperationRecordHandler().Router(gRouter)     // 操作记录

		// Code generated by project Begin; DO NOT EDIT.
		autocode.NewAutoCodeExampleHandler().Router(gRouter)
		// Code generated by project End; DO NOT EDIT.
	}

	global.GVA_LOG.Info("router register success")
	return Router
}
